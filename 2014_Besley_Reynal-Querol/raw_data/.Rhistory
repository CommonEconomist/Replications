legend(180, 450, legend = 1:4, fill = c(NA, "green", par("fg"), "blue"),
density = c(NA, NA, 10, 30), angle = c(NA, NA, 30, -30))
require(gplot2)
require(ggplot2)
p <- ggplot(data=diamonds, aes(x=price, y=carat)) + geom_line(aes(color=color))
rect <- data.frame (
xmin=5000, xmax=10000, ymin=-Inf, ymax=Inf)
p + geom_rect(data=rect, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), color="grey20", alpha=0.5, inherit.aes = FALSE)
rect(100+i, 300+i, 150+i, 380+i, col = rainbow(11, start = 0.7, end = 0.1))
op<-par(bg="grey95")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
rect(100, 300, 150, 380)
plot(c(100, 250), c(300, 450),type = "n",xlab = "",ylab = "",bty="n")
plot(c(100, 250), c(300, 450),type = "n",xlab = "",ylab = "",bty="n",axes=FALSE)
rect(100, 300, 150, 380)
plot(c(100, 250), c(300, 450),type = "n",xlab = "",ylab = "")
rect(100, 300, 150, 380)
rect(150,350,180,400)
plot(c(100, 250),c(100,450),type = "n",xlab = "",ylab = "")
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(100,180,240,250)
rect(180,100,240,250)
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
par(mar=c(2,2,2,2))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
par(mar=c(3,4,3,4))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
par(mar=c(3,6,3,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,240,250)
rect(120,160,180,230)
rect(110,110,180,160)
rect(180,100,250,250)
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250)
rect(130,160,180,230)
rect(110,110,180,160)
rect(110,120,180,160)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250)
rect(130,160,180,230)
rect(110,120,180,160)
rect(160,100,180,120)
text(230,160,labels=c("1"),cex=2)
text(160,200,labels=c("2"),cex=2)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250) # Germany
rect(130,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(155,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
op<-par(bg="grey95")
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250) # Germany
rect(130,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(155,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
require(grDevices)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250) # Germany
rect(130,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(155,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250) # Germany
rect(120,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(145,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
text(150,195,labels=c("2"),cex=2)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "")
rect(180,100,250,250) # Germany
rect(120,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(150,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "",axes=FALSE)
rect(180,100,250,250) # Germany
rect(120,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(150,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
require(grDevices)
par(mar=c(2,6,2,6))
plot(c(100, 250),c(100,250),type = "n",xlab = "",ylab = "",axes=FALSE)
rect(180,100,250,250) # Germany
rect(120,160,180,230) # Netherlands
rect(110,120,180,160) # Belgium
rect(160,100,180,120) # Luxemburg
text(215,175,labels=c("1"),cex=2)
text(150,195,labels=c("2"),cex=2)
text(145,140,labels=c("3"),cex=2)
text(170,110,labels=c("4"),cex=2)
DT = data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
View(DT)
coordinates(DT)<-~x+y
require(sp)
coordinates(DT)<-~x+y
plot(DT)
neigh<-poly2nb(DT)
require(spdep)
neigh<-poly2nb(DT)
DT$cell<-1:nrow(df) # Grid-cell identifier
DT$cell<-1:nrow(DT) # Grid-cell identifier
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
DT$cell<-1:nrow(DT) # Grid-cell identifier
require(raster)
coordinates(df)<-~x+y
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
DT$cell<-1:nrow(DT) # Grid-cell identifier
require(raster)
coordinates(DT)<-~x+y
summary(DT)
rast<-raster(extent(DT),ncol=3,nrow=3)
grid<-rasterize(DT,rast,DT$cell,FUN=max)
grid<-rasterToPolygons(grid) # Create polygons
require(spdep)
neigh<-poly2nb(grid) # Create neighbour list
weights<-nb2listw(neigh,style="B",zero.policy=TRUE) # Create weights (binary)
names(grid)
a<-data.frame(grid)
View(a)
a2<-data.frame(DT)
View(`a2`)
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
require(raster)
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
require(raster)
coordinates(DT)<-~x+y
rast<-raster(extent(DT),ncol=3,nrow=3)
grid<-rasterize(DT,rast,DT$value,FUN=max)
grid<-rasterToPolygons(grid) # Create polygons
require(spdep)
neigh<-poly2nb(grid) # Create neighbour list
weights<-nb2listw(neigh,style="B",zero.policy=TRUE) # Create weights (binary)
grid$spatial.lag<-lag.listw(weights,grid$totalcount,zero.policy=TRUE) # Add to raster
names(grid)
grid$spatial.lag<-lag.listw(weights,grid$layer,zero.policy=TRUE) # Add to raster
a<-data.frame(grid)
View(a)
a2<-data.frame(DT)
View(`a2`)
plot(grid)
plot(grid$layer)
plot(grid)
View(a)
pts<-cbind(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
View(pts)
require(sp)
pts<-SpatialPoints(pts)
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3))
rm(DT)
df<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3))
df$cell<-1:nrow(df) # Grid-cell identifier
require(raster)
coordinates(df)<-~x+y
rast<-raster(extent(df),ncol=3,nrow=3)
names(df)
grid<-rasterize(df,rast,df$cell,FUN=max)
grid<-rasterToPolygons(grid) # Create polygons
pointsincell=over(SpatialPolygons(grid@polygons),SpatialPoints(pts),returnList=TRUE)
grid$value<-unlist(lapply(pointsincell,length))
require(spdep)
neigh<-poly2nb(grid) # Create neighbour list
weights<-nb2listw(neigh,style="B",zero.policy=TRUE) # Create weights (binary)
grid$spatial.lag<-lag.listw(weights,grid$value,zero.policy=TRUE) # Add to raster
df2<-data.frame(grid)
View(df2)
pointsincell
plot(grid)
points(pts)
summary(grid$value)
names(pts)
summary(pts)
pts$value
pointsincell=over(SpatialPolygons(grid@polygons),SpatialPoints(pts$value),returnList=TRUE)
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
require(sp)
coordinates(DT)<-~x+y
summary(DT)
a<-data.frame(DT)
View(a)
plot(DT)
?lag.listw
require(spdep)
neigh<-poly2nb(DT) # Create neighbour list
rast<-raster(extent(DT),ncol=3,nrow=3)
grid<-rasterize(DT,rast)
summary(grid)
grid<-rasterToPolygons(grid) # Create polygons
summary(grid)
names(grid)
neigh<-poly2nb(grid) # Create neighbour list
weights<-nb2listw(neigh,style="B",zero.policy=TRUE) # Create weights (binary)
grid$spatial.lag<-lag.listw(weights,grid$value,zero.policy=TRUE) # Add to raster
names(grid)
a<-data.frame(grid)
View(a)
a2<-data.frame(DT)
View(`a2`)
DT2<-data.frame(grid)
View(DT2)
DT<-data.frame(x=c(rep(1,3),rep(2,3),rep(3,3)),y=rep(c(1,2,3),3),value=100*c(1:9))
require(sp)
coordinates(DT)<-~x+y
rast<-raster(extent(DT),ncol=3,nrow=3)
grid<-rasterize(DT,rast)
grid<-rasterToPolygons(grid) # Create polygons
require(spdep)
neigh<-poly2nb(grid) # Create neighbour list
weights<-nb2listw(neigh,style="B",zero.policy=TRUE) # Create weights (binary)
grid$spatial.lag<-lag.listw(weights,grid$value,zero.policy=TRUE) # Add to raster
DT2<-data.frame(grid)
View(DT2)
structure(list(Variables = structure(list(ADA = "ADA", LEAD = "LEAD",
BIG4 = "BIG4", LOGMKT = "LOGMKT", LEV = "LEV", ROA = "ROA",
ROAL = "ROAL", LOSS = "LOSS", CFO = "CFO", BTM = "BTM", ABSACCRL = "ABSACCRL",
GROWTH = "GROWTH", ALTMAN = "ALTMAN", STDEARN = "STDEARN",
TENURE = "TENURE", LOGASSETS = "LOGASSETS"), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Mean = structure(list(ADA = 0.061, LEAD = 0.348, BIG4 = 0.7,
LOGMKT = 4.893, LEV = 0.512, ROA = -0.061, ROAL = -0.058,
LOSS = 0.41, CFO = 0.026, BTM = 0.96, ABSACCRL = 0.107, GROWTH = 0.14,
ALTMAN = 2.031, STDEARN = 45.116, TENURE = 0.841, LOGASSETS = 5.433), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), SD = structure(list(ADA = 0.062, LEAD = 0.476, BIG4 = 0.458,
LOGMKT = 2.245, LEV = 0.307, ROA = 0.251, ROAL = 0.254, LOSS = 0.492,
CFO = 0.192, BTM = 1.553, ABSACCRL = 0.124, GROWTH = 0.431,
ALTMAN = 5.155, STDEARN = 100.082, TENURE = 0.365, LOGASSETS = 2.049), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Median = structure(list(ADA = 0.042, LEAD = 0, BIG4 = 1,
LOGMKT = 4.986, LEV = 0.476, ROA = 0.021, ROAL = 0.022, LOSS = 0,
CFO = 0.069, BTM = 0.754, ABSACCRL = 0.07, GROWTH = 0.073,
ALTMAN = 2.404, STDEARN = 11.078, TENURE = 1, LOGASSETS = 5.448), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
))), .Names = c("Variables", "Mean", "SD", "Median"), row.names = c(NA,
-16L), class = "data.frame")
A<-structure(list(Variables = structure(list(ADA = "ADA", LEAD = "LEAD",
BIG4 = "BIG4", LOGMKT = "LOGMKT", LEV = "LEV", ROA = "ROA",
ROAL = "ROAL", LOSS = "LOSS", CFO = "CFO", BTM = "BTM", ABSACCRL = "ABSACCRL",
GROWTH = "GROWTH", ALTMAN = "ALTMAN", STDEARN = "STDEARN",
TENURE = "TENURE", LOGASSETS = "LOGASSETS"), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Mean = structure(list(ADA = 0.061, LEAD = 0.348, BIG4 = 0.7,
LOGMKT = 4.893, LEV = 0.512, ROA = -0.061, ROAL = -0.058,
LOSS = 0.41, CFO = 0.026, BTM = 0.96, ABSACCRL = 0.107, GROWTH = 0.14,
ALTMAN = 2.031, STDEARN = 45.116, TENURE = 0.841, LOGASSETS = 5.433), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), SD = structure(list(ADA = 0.062, LEAD = 0.476, BIG4 = 0.458,
LOGMKT = 2.245, LEV = 0.307, ROA = 0.251, ROAL = 0.254, LOSS = 0.492,
CFO = 0.192, BTM = 1.553, ABSACCRL = 0.124, GROWTH = 0.431,
ALTMAN = 5.155, STDEARN = 100.082, TENURE = 0.365, LOGASSETS = 2.049), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Median = structure(list(ADA = 0.042, LEAD = 0, BIG4 = 1,
LOGMKT = 4.986, LEV = 0.476, ROA = 0.021, ROAL = 0.022, LOSS = 0,
CFO = 0.069, BTM = 0.754, ABSACCRL = 0.07, GROWTH = 0.073,
ALTMAN = 2.404, STDEARN = 11.078, TENURE = 1, LOGASSETS = 5.448), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
))), .Names = c("Variables", "Mean", "SD", "Median"), row.names = c(NA,
-16L), class = "data.frame")
View(A)
a_cada1<-structure(list(Variables = structure(list(ADA = "ADA", LEAD = "LEAD",
BIG4 = "BIG4", LOGMKT = "LOGMKT", LEV = "LEV", ROA = "ROA",
ROAL = "ROAL", LOSS = "LOSS", CFO = "CFO", BTM = "BTM", ABSACCRL = "ABSACCRL",
GROWTH = "GROWTH", ALTMAN = "ALTMAN", STDEARN = "STDEARN",
TENURE = "TENURE", LOGASSETS = "LOGASSETS"), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Mean = structure(list(ADA = 0.061, LEAD = 0.348, BIG4 = 0.7,
LOGMKT = 4.893, LEV = 0.512, ROA = -0.061, ROAL = -0.058,
LOSS = 0.41, CFO = 0.026, BTM = 0.96, ABSACCRL = 0.107, GROWTH = 0.14,
ALTMAN = 2.031, STDEARN = 45.116, TENURE = 0.841, LOGASSETS = 5.433), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), SD = structure(list(ADA = 0.062, LEAD = 0.476, BIG4 = 0.458,
LOGMKT = 2.245, LEV = 0.307, ROA = 0.251, ROAL = 0.254, LOSS = 0.492,
CFO = 0.192, BTM = 1.553, ABSACCRL = 0.124, GROWTH = 0.431,
ALTMAN = 5.155, STDEARN = 100.082, TENURE = 0.365, LOGASSETS = 2.049), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Median = structure(list(ADA = 0.042, LEAD = 0, BIG4 = 1,
LOGMKT = 4.986, LEV = 0.476, ROA = 0.021, ROAL = 0.022, LOSS = 0,
CFO = 0.069, BTM = 0.754, ABSACCRL = 0.07, GROWTH = 0.073,
ALTMAN = 2.404, STDEARN = 11.078, TENURE = 1, LOGASSETS = 5.448), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
))), .Names = c("Variables", "Mean", "SD", "Median"), row.names = c(NA,
-16L), class = "data.frame")
a_cada2<-structure(list(Variables = structure(list(ADA = "ADA", LEAD = "LEAD",
BIG4 = "BIG4", LOGMKT = "LOGMKT", LEV = "LEV", ROA = "ROA",
ROAL = "ROAL", LOSS = "LOSS", CFO = "CFO", BTM = "BTM", ABSACCRL = "ABSACCRL",
GROWTH = "GROWTH", ALTMAN = "ALTMAN", STDEARN = "STDEARN",
TENURE = "TENURE", LOGASSETS = "LOGASSETS"), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Mean = structure(list(ADA = 0.061, LEAD = 0.348, BIG4 = 0.7,
LOGMKT = 4.893, LEV = 0.512, ROA = -0.061, ROAL = -0.058,
LOSS = 0.41, CFO = 0.026, BTM = 0.96, ABSACCRL = 0.107, GROWTH = 0.14,
ALTMAN = 2.031, STDEARN = 45.116, TENURE = 0.841, LOGASSETS = 5.433), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), SD = structure(list(ADA = 0.062, LEAD = 0.476, BIG4 = 0.458,
LOGMKT = 2.245, LEV = 0.307, ROA = 0.251, ROAL = 0.254, LOSS = 0.492,
CFO = 0.192, BTM = 1.553, ABSACCRL = 0.124, GROWTH = 0.431,
ALTMAN = 5.155, STDEARN = 100.082, TENURE = 0.365, LOGASSETS = 2.049), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
)), Median = structure(list(ADA = 0.042, LEAD = 0, BIG4 = 1,
LOGMKT = 4.986, LEV = 0.476, ROA = 0.021, ROAL = 0.022, LOSS = 0,
CFO = 0.069, BTM = 0.754, ABSACCRL = 0.07, GROWTH = 0.073,
ALTMAN = 2.404, STDEARN = 11.078, TENURE = 1, LOGASSETS = 5.448), .Names = c("ADA",
"LEAD", "BIG4", "LOGMKT", "LEV", "ROA", "ROAL", "LOSS", "CFO",
"BTM", "ABSACCRL", "GROWTH", "ALTMAN", "STDEARN", "TENURE", "LOGASSETS"
))), .Names = c("Variables", "Mean", "SD", "Median"), row.names = c(NA,
-16L), class = "data.frame")
A<-merge(a_cada1,a_cada2, by = c("Variables"))
A<-append(a_cada1,a_cada2)
?append
?merge
A<-rbind(a_cada1,a_cada2)
View(A)
A<-cbind(a_cada1,a_cada2)
View(A)
# Create observations
pts<-cbind(set.seed(2014),x=runif(30,1,5),y=runif(30,1,5),
time=sample(1:5,30,replace=T))
require(sp)
pts<-SpatialPoints(pts)
# Observations take place in different areas; create polygons for areas
X<-c(rep(1,5),rep(2,5),rep(3,5),rep(4,5),rep(5,5))
Y<-c(rep(seq(1,5,1),5))
df<-data.frame(X,Y)
df$cell<-1:nrow(df) # Grid-cell identifier
require(raster)
coordinates(df)<-~X+Y
rast<-raster(extent(df),ncol=5,nrow=5)
grid<-rasterize(df,rast,df$cell,FUN=max)
grid<-rasterToPolygons(grid) # Create polygons
pointsincell=over(SpatialPolygons(grid@polygons),SpatialPoints(pts),returnList=TRUE)
grid$totalcount<-unlist(lapply(pointsincell,length))
require(spdep)
neigh<-poly2nb(grid) # Create neighbour list
weights<-nb2listw(neigh,style="B",zero.policy=TRUE) # Create weights (binary)
grid$spatial.lag<-lag.listw(weights,grid$totalcount,zero.policy=TRUE) # Add to raster
# Plot data
par(mar=c(3,6,3,6))
plot(grid)
axis(1,las=1,at=seq(1,5,1),tick=FALSE)
axis(2,las=1,at=seq(1,5,1),tick=FALSE,line=-4)
points(pts,pch=19)
weights
a<-data.frame(weights)
summary(weights)
names(weights)
a<-weights$neighbours
a
load("~/Dropbox/Sandbox/prolix/output/ADM1.Rdata")
names(land)
plot(land$nat.res)
countries<-c("AGO","BDI","CAF","TCD","COG","COD","DJI","ERI","ETH","GNB","GIN",
"CIV","LSO","LBR","MOZ","NGA","RWA","SLE","SOM","SDN","UGA")
setwd("~/Dropbox/Sandbox/prolix/output")
load("AF_adm1.Rdata")
setwd("~/Dropbox/Sandbox/prolix/data")
require(maptools)
dia<-readShapeSpatial("DIADATA.shp")
dia<-subset(dia,CONTCODE==4) # Only inlcude African countries
dia$iso3c<-countrycode(dia$COWCODE,"cown","iso3c",warn=TRUE)
require(countrycode)
setwd("~/Dropbox/Sandbox/prolix/data")
require(maptools)
dia<-readShapeSpatial("DIADATA.shp")
dia<-subset(dia,CONTCODE==4) # Only inlcude African countries
dia$iso3c<-countrycode(dia$COWCODE,"cown","iso3c",warn=TRUE)
dia<-dia[dia$iso3c %in% countries,] # Limit to countries in sample
dia<-SpatialPoints(dia) # Might need to be subset to alluvial diamonds only
oil<-readShapeSpatial("Petrodata_Onshore_V1.2.shp")
oil<-subset(oil,CONTCODE==4) # African countries only
oil$iso3c<-countrycode(oil$COWCODE,"cown","iso3c",warn=TRUE)
oil<-oil[oil$iso3c %in% countries,] # Limit to countries in sample
require(sp)
setwd("~/Dropbox/Sandbox/geriatrix/data")
require(maptools)
fill<-readShapeSpatial("africa.shp")
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5,col="gray100")
plot(land,add=TRUE,col="gray95")
points(dia,col="steelblue4",pch=18,lwd=0.2)
points(dia,col="coral4",pch=18,lwd=0.2)
points(dia,col="lightcyan4",pch=18,lwd=0.2)
points(dia,col="slategrey4",pch=18,lwd=0.2)
points(dia,col="slategray4",pch=18,lwd=0.2)
plot(oil,add=TRUE<col="black")
plot(oil,add=TRUE,col="black")
points(dia,col="steelblue4",pch=18,lwd=0.2)
eth<-readShapeSpatial("GeoEPR-ETH_2.0.shp",delete_null_obj=TRUE) # Polygons
setwd("~/Dropbox/Sandbox/prolix/data")
eth<-readShapeSpatial("GeoEPR-ETH_2.0.shp",delete_null_obj=TRUE) # Polygons
eth$iso3c<-countrycode(eth$COWCODE,"cown","iso3c",warn=TRUE)
eth<-eth[eth$iso3c %in% countries,] # Limit to countries in sample
eth<-subset(eth,ENDYEAR>=1990 & TYPE==1) # Regionally based groups
summary(eth)
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5,col="gray100")
plot(land,add=TRUE,col="gray95")
plot(eth,add=TRUE,col="steelblue4")
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5,col="gray100")
plot(land,add=TRUE,col="gray95")
plot(eth,add=TRUE,col="steelblue4",main="Regional minorities")
plot(fill,lwd=0.5,col="gray100",main="Regional minorities")
par(mar=c(0,0,3,0))
plot(fill,lwd=0.5,col="gray100",main="Regional minorities")
?plot
par(mar=c(0,0,3,0))
plot(fill,lwd=0.5,col="gray100",main="Regional minorities")
par(mar=c(0,0,5,0))
plot(fill,lwd=0.5,col="gray100",main="Regional minorities")
plot(fill,lwd=0.5,col="gray100", Main="Regional minorities")
plot(fill,lwd=0.5,col="gray100",main="Regional minorities")
plot(fill,lwd=0.5,col="gray100")
plot(fill,lwd=0.5)
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5)
plot(land,add=TRUE,col="gray95")
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5)
plot(land,add=TRUE,col="gray100")
require(sp)
setwd("~/Dropbox/Sandbox/geriatrix/data")
require(maptools)
fill<-readShapeSpatial("africa.shp")
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5,col="gray100")
plot(land,add=TRUE,col="gray95")
points(dia,col="steelblue4",pch=18,lwd=0.2)
plot(oil,add=TRUE,col="black")
par(mar=c(0,0,0,0))
plot(fill,lwd=0.5,col="gray100")
plot(land,add=TRUE,col="gray95")
plot(eth,add=TRUE,col="steelblue4")
load("~/Dropbox/Sandbox/prolix/output/aid.cs.Rdata")
names(aid.cs)
plot(aid.cs$conflict,aid.cs$aid.ln)
par(mar=c(3,3,3,3))
plot(aid.cs$conflict,aid.cs$aid.ln)
plot(ln(aid.cs$conflict),aid.cs$aid.ln)
?ln
?log
plot(log(aid.cs$conflict),aid.cs$aid.ln)
aid.cs$conflict.ln<-log(aid.cs$conflict)
plot(aid.cs$conflict.ln,aid.cs$aid.ln)
plot(aid.cs$conflict,aid.cs$aid)
plot(aid.cs$conflict.ln,aid.cs$aid.ln)
fit<-lm(aid.cs$aid~poly(aid.cs$conflict,3,raw=T))
lines(fit)
summary(fit)
max(fit)
ycoord<-seq(0,1600000000,length=13)
lines(ycoord, predict(fit3, data.frame(x=ycoord)), col="chocolate1",lwd=2)
lines(ycoord, predict(fit, data.frame(x=ycoord)), col="chocolate1",lwd=2)
ycoord<-seq(0,1600000000,length=319)
lines(ycoord, predict(fit, data.frame(x=ycoord)), col="chocolate1",lwd=2)
plot(aid.cs$conflict,aid.cs$aid)
lines(ycoord, predict(fit, data.frame(x=ycoord)), col="chocolate1",lwd=2)
fit<-lm(aid.cs$aid.ln~poly(aid.cs$conflict.ln,3,raw=T))
plot(aid.cs$conflict.ln,aid.cs$aid.ln)
fit<-lm(aid.cs$conflict.ln~aid.cs$aid.ln)
fit<-lm(aid.cs$conflict.ln~aid.cs$aid.ln,na.rm=T)
fit<-lm(aid.cs$conflict~aid.cs$aid)
summary(fit)

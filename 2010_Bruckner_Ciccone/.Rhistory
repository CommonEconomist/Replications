"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears")]
test<-na.omit(dta[,c("conflict_onset","incidence_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears")])
test<-na.omit(dta[,c("conflict_onset","incidence_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears","ccode")])
l1<-glm(conflict_onset~incidence_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2_l+polity2_sq_l+
log_pop_pwt_l+log_pop_pwt_fd_rescaled_l+log_rgdpch_pwt_l+
grgdpch_pwt_l+peaceyears,test,family=binomial(link="logit"))
clse(l1,1,test$ccode)
names(dta)
test<-na.omit(dta[,c("conflict_onset","incidence_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears","peaceyears2","peaceyears3","ccode")])
l1<-glm(conflict_onset~incidence_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2_l+polity2_sq_l+
log_pop_pwt_l+log_pop_pwt_fd_rescaled_l+log_rgdpch_pwt_l+
grgdpch_pwt_l+peaceyears+peaceyears2+peaceyears3,
test,family=binomial(link="logit"))
clse(l1,1,test$ccode)
require(MASS)
nb1<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
dta)
nobs(nb1)
summary(nb1)
nobs(nb1)
l1<-glm(conflict_onset~-ccode,test,family=binomial(link="logit"))
clse(l1,1,test$ccode)
l1<-glm(conflict_onset~.-ccode,test,family=binomial(link="logit"))
clse(l1,1,test$ccode)
names(dta)
nb1<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+dta[,38:68],
dta)
test<-dta[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence","ttrend",
"year","ccode")]
test<-dta[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence","ttrend",
38:68,"ccode")]
test<-dta[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence","ttrend",
38:68,"ccode")]
test<-na.omit(dta[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
nb1<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
test)
clse(nb1,1,test$ccode)
nb2<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+
factor(year)+factor(ccode),test)
summary(nb2)
nobs(nb2)
a<-na.omit(test)
View(a)
length(unique(dta$ccode))
765/47
table(dta$ccode)
test<-test[test$ccode !=520,]
nb2<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+
factor(year)+factor(ccode),test)
summary(nb2)
require(foreign)
dta<-read.dta("~/Desktop/H_S_JPR_491_Replication_Revised.dta")
options(scipen=4)
#**************************************
#### Robust clustered standard errors ####
#**************************************
## Source:
# http://people.su.se/~ma/mcluster.R
# http://people.su.se/~ma/clustering.pdf
# Script written by Mahmood Arai
clse <-
function(fm, dfcw, cluster){
# R-codes (www.r-project.org) for computing
# clustered-standard errors. Mahmood Arai, Jan 26, 2008.
# The arguments of the function are:
# fitted model, cluster1 and cluster2
# You need to install libraries `sandwich' and `lmtest'
# reweighting the var-cov matrix for the within model
library(sandwich);library(lmtest)
M <- length(unique(cluster))
N <- length(cluster)
K <- fm$rank
dfc <- (M/(M-1))*((N-1)/(N-K))
uj  <- apply(estfun(fm),2, function(x) tapply(x, cluster, sum));
vcovCL <- dfc*sandwich(fm, meat=crossprod(uj)/N)*dfcw
coeftest(fm, vcovCL) }
test<-na.omit(dta[,c("conflict_onset","incidence_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears","peaceyears2","peaceyears3","ccode")])
l1<-glm(conflict_onset~.-ccode,test,family=binomial(link="logit"))
clse(l1,1,test$ccode)
require(MASS)
test<-na.omit(dta[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
a<-na.omit(dta)
a<-a[a$ccode!=520,]
a<-na.omit(dta[dta$ccode!=520,])
test<-dta[,-c("conflict_onset")]
names(dta)
a<-na.omit(dta[,-6])
a<-dta[dta$ccode!=520,]
b<-na.omit(a)
rm(b,tets)
rm(b,test)
summary(a)
915-765
a0<-na.omit(a)
test<-test[dta$ccode!=520,]
test<-dta[dta$ccode!=520,] # Remove country
test<-na.omit(dta[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
dta2<-dta[dta$ccode!=520,] # Remove country
test<-na.omit(dta2[,c("events_no_onset","events_no_onset_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2","polity2_sq","log_pop_pwt",
"log_pop_pwt_fd","log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
test<-na.omit(dta2[,c("events_no_onset","events_no_onset_l",
"on_violent_events","non_violent_events_l",
"violent_events_no_onset","violent_events_no_onset_l",
"gov_targeted_events_no_onset","gov_targeted_events_no_onset_l",
"nongov_targeted_events","nongov_targeted_events_l",
"GPCP_precip_mm_deviation_sd","GPCP_precip_mm_deviation_sd_sq",
"GPCP_precip_mm_deviation_sd_l","GPCP_precip_mm_deviation_sd_l_sq",
"polity2","polity2_sq","log_pop_pwt","log_pop_pwt_fd",
"log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
test<-na.omit(dta2[,c("events_no_onset","events_no_onset_l",
"non_violent_events","non_violent_events_l",
"violent_events_no_onset","violent_events_no_onset_l",
"gov_targeted_events_no_onset","gov_targeted_events_no_onset_l",
"nongov_targeted_events","nongov_targeted_events_l",
"GPCP_precip_mm_deviation_sd","GPCP_precip_mm_deviation_sd_sq",
"GPCP_precip_mm_deviation_sd_l","GPCP_precip_mm_deviation_sd_l_sq",
"polity2","polity2_sq","log_pop_pwt","log_pop_pwt_fd",
"log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
require(MASS)
dta2<-dta[dta$ccode!=520,] # Remove country
require(foreign)
dta<-read.dta("~/Desktop/H_S_JPR_491_Replication_Revised.dta")
options(scipen=4)
source(url("http://people.su.se/~ma/mcluster.R"))
source("http://people.su.se/~ma/mcluster.R")
#**************************************
#### Robust clustered standard errors ####
#**************************************
## Source:
# http://people.su.se/~ma/mcluster.R
# http://people.su.se/~ma/clustering.pdf
# Script written by Mahmood Arai
clse <-
function(fm, dfcw, cluster){
# R-codes (www.r-project.org) for computing
# clustered-standard errors. Mahmood Arai, Jan 26, 2008.
# The arguments of the function are:
# fitted model, cluster1 and cluster2
# You need to install libraries `sandwich' and `lmtest'
# reweighting the var-cov matrix for the within model
library(sandwich);library(lmtest)
M <- length(unique(cluster))
N <- length(cluster)
K <- fm$rank
dfc <- (M/(M-1))*((N-1)/(N-K))
uj  <- apply(estfun(fm),2, function(x) tapply(x, cluster, sum));
vcovCL <- dfc*sandwich(fm, meat=crossprod(uj)/N)*dfcw
coeftest(fm, vcovCL) }
test<-na.omit(dta[,c("conflict_onset","incidence_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears","peaceyears2","peaceyears3","ccode")])
m1<-glm(conflict_onset~.-ccode,test,family=binomial(link="logit"))
clse(m1,1,test$ccode)
require(MASS)
dta2<-dta[dta$ccode!=520,] # Remove country
test<-na.omit(dta2[,c("events_no_onset","events_no_onset_l",
"non_violent_events","non_violent_events_l",
"violent_events_no_onset","violent_events_no_onset_l",
"gov_targeted_events_no_onset","gov_targeted_events_no_onset_l",
"nongov_targeted_events","nongov_targeted_events_l",
"GPCP_precip_mm_deviation_sd","GPCP_precip_mm_deviation_sd_sq",
"GPCP_precip_mm_deviation_sd_l","GPCP_precip_mm_deviation_sd_l_sq",
"polity2","polity2_sq","log_pop_pwt","log_pop_pwt_fd",
"log_rgdpch_pwt","grgdpch_pwt","incidence",
"ttrend","year","ccode")])
nb1<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
test)
clse(nb1,1,test$ccode)
m3<-glm.nb(events_no_onset~events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+
factor(year)+factor(ccode),test)
summary(m3)
m4<-glm.nb(non_violent_events_no_onset~non_violent_events_no_onset_l+
GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
test)
m4<-glm.nb(non_violent_events~non_violent_events_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
test)
clse(m4,1,test$ccode)
m5<-glm.nb(non_violent_events~non_violent_events_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+
factor(year)+factor(ccode),test)
summary(m5)
m5<-glm.nb(violent_events~violent_events_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
test);clse(m5,1,test$ccode)
m5<-glm.nb(violent_events_no_onset~violent_events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+factor(year),
test);clse(m5,1,test$ccode)
names(dta)
m7<-glm.nb(violent_events_no_onset~violent_events_no_onset_l+GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+
factor(year)+factor(ccode),test);summary(m7)
m8<-glm.nb(gov_targeted_events_no_onset~gov_targeted_events_no_onset_l+
GPCP_precip_mm_deviation_sd+GPCP_precip_mm_deviation_sd_sq+
GPCP_precip_mm_deviation_sd_l+GPCP_precip_mm_deviation_sd_l_sq+
polity2+polity2_sq+log_pop_pwt+log_pop_pwt_fd+log_rgdpch_pwt+
grgdpch_pwt+incidence+ttrend+factor(year),test);clse(m8,1,test$ccode)
m10<-glm.nb(nongov_targeted_events_no_onset~nongov_targeted_events_no_onset_l+
GPCP_precip_mm_deviation_sd+GPCP_precip_mm_deviation_sd_sq+
GPCP_precip_mm_deviation_sd_l+GPCP_precip_mm_deviation_sd_l_sq+
polity2+polity2_sq+log_pop_pwt+log_pop_pwt_fd+log_rgdpch_pwt+
grgdpch_pwt+incidence+ttrend+factor(year),test);clse(m10,1,test$ccode)
m10<-glm.nb(nongov_targeted_events~nongov_targeted_events_l+
GPCP_precip_mm_deviation_sd+GPCP_precip_mm_deviation_sd_sq+
GPCP_precip_mm_deviation_sd_l+GPCP_precip_mm_deviation_sd_l_sq+
polity2+polity2_sq+log_pop_pwt+log_pop_pwt_fd+log_rgdpch_pwt+
grgdpch_pwt+incidence+ttrend+factor(year),test);clse(m10,1,test$ccode)
m11<-glm.nb(nongov_targeted_events~nongov_targeted_events_l+
GPCP_precip_mm_deviation_sd+GPCP_precip_mm_deviation_sd_sq+
GPCP_precip_mm_deviation_sd_l+GPCP_precip_mm_deviation_sd_l_sq+
polity2+polity2_sq+log_pop_pwt+log_pop_pwt_fd+log_rgdpch_pwt+
grgdpch_pwt+incidence+ttrend+factor(year)+factor(ccode),test);summary(m11)
m7<-glm.nb(violent_events_no_onset~GPCP_precip_mm_deviation_sd+
GPCP_precip_mm_deviation_sd_sq+GPCP_precip_mm_deviation_sd_l+
GPCP_precip_mm_deviation_sd_l_sq+polity2+polity2_sq+log_pop_pwt+
log_pop_pwt_fd+log_rgdpch_pwt+grgdpch_pwt+incidence+ttrend+
factor(year)+factor(ccode),test);summary(m7)
install.packages("clusterSEs")
test<-na.omit(dta[,c("conflict_onset","incidence_l","GPCP_precip_mm_deviation_sd",
"GPCP_precip_mm_deviation_sd_sq","GPCP_precip_mm_deviation_sd_l",
"GPCP_precip_mm_deviation_sd_l_sq","polity2_l","polity2_sq_l",
"log_pop_pwt_l","log_pop_pwt_fd_rescaled_l","log_rgdpch_pwt_l",
"grgdpch_pwt_l","peaceyears","peaceyears2","peaceyears3","ccode")])
m1<-glm(conflict_onset~.-ccode,test,family=binomial(link="logit"))
clse(m1,1,test$ccode)
library(clusterSEs)
cluster.bs.glm(m1,test,~ccode)
source("https://github.com/CommonEconomist/Replications/blob/master/2010_Bruckner_Ciccone/code/functions.R")
source("http://github.com/CommonEconomist/Replications/blob/master/2010_Bruckner_Ciccone/code/functions.R")
source_url("https://github.com/CommonEconomist/Replications/blob/master/2010_Bruckner_Ciccone/code/functions.R")
library(devtools)
source_url("https://github.com/CommonEconomist/Replications/blob/master/2010_Bruckner_Ciccone/code/functions.R")
library(devtools)
source_url("https://github.com/CommonEconomist/Rcode/blob/master/clse.R")
setwd("~/Dropbox/Sandbox/autologit/")
source("Load.R")
m0<-glm(incidencev414~polity2+W.polity2,
X[X$year<=2005,],family=binomial(link="logit"))
ous<-predict.glm(m0,X[-1:-982,],type="response",se.fit=TRUE)
separationplot(fitted(m0),m0$model$incidencev414)
r1=plot(roc(m0$model$incidencev414,fitted(m0)))
mean((m0$model$incidencev414-fitted(m0))^2)
separationplot(ous$fit,outcome[-1:-982])
r2=plot(roc(outcome[-1:-982],ous$fit))
mean((outcome[-1:-982]-ous$fit)^2)
set.seed(42);m1<-jags(data=list(incidence=incidence,d=d,dW=dW,yW=yW,N=N),
inits=NULL,model.file=M1,
parameters.to.save="fit",
n.chains=3,n.iter=10000,n.burnin=1000,n.thin=2)
?density
f1<-data.frame(jagsresults(m1,"fit"))
separationplot(f1[1:982,]$mean,outcome[1:982])
r3=plot(roc(outcome[1:982],f1[1:982,]$mean))
mean((outcome[1:982]-f1[1:982,]$mean)^2)
plot(density(f1$mean,from=0,to=1),axes=F)
plot(density(f1$mean,from=0,to=1),axes=F,main="")
axis(1,tick=FALSE)
par(mar=c(5,5,2,2),family="serif",las=1)
plot(density(f1$mean,from=0,to=1),axes=F,main="")
plot(density(f1$mean,from=0,to=1),axes=F,main="",
xlab="Predicted probability",ylab="Density")
axis(1,tick=FALSE)
plot(density(f1$mean,from=0,to=1),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
axis(2,tick=FALSE,cex.axis=1.2)
plot(density(f1$mean,from=0,to=1),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
axis(2,tick=FALSE,cex.axis=1.2)
plot(density(f1$mean,from=0,to=1),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
summary(f1$mean)
plot(density(f1$mean,from=0,to=.5),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
par(mar=c(5,5,2,2),family="serif",las=1)
plot(density(f1$mean,from=0.08,to=.5),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
plot(density(f1$mean,from=0,to=.5),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
plot(density(f1$mean),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
gc()
separationplot(f1[-1:-982,]$mean,outcome[-1:-982])
r4=plot(roc(outcome[-1:-982],f1[-1:-982,]$mean))
mean((outcome[-1:-982]-f1[-1:-982,]$mean)^2)
plot(density(f1[1:982,]$mean),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
separationplot(f1[-1:-982,]$mean,outcome[-1:-982])
r4=plot(roc(outcome[-1:-982],f1[-1:-982,]$mean))
mean((outcome[-1:-982]-f1[-1:-982,]$mean)^2)
r4
names(r3)
rc$res
r3$res
opt<-which.max(rowSums(r3$res[, c("sens", "spec")]))
x <- rnorm( 100 )
z <- rnorm( 100 )
w <- rnorm( 100 )
tigol <- function( x ) 1 - ( 1 + exp( x ) )^(-1)
y <- rbinom( 100, 1, tigol( 0.3 + 3*x + 5*z + 7*w ) )
rc <- ROC( form = y ~ x + z, plot="sp" )
( form = y ~ x + z, plot="sp" )
names(r3)
?rowSums
opt<-which.max(rowSums(r3[,c("sensitivities","specificities")]))
opt<-which.max(rowSums(r3[2:3]))
opt<-which.max(rowSums(r3[,2:3]))
a<-r[,2]
a<-r3[,2]
a<-r3[2]
a
opt<-which.max(rowSums(unlist(r3[,2:3])))
a<-r3$sensitivities
opt<-which.max(rowSums(c(r3$sensitivities,r3$specificities)))
opt<-which.max(rowSums(r3[[2:3]]))
opt<-which.max(rowSums(r3[[,2:3]]))
r3[,2]
r3[2]
r3[,2][1]
r3[,2][,1]
sens<-r3[,2]
sens<-r3[2]
sens<-r3[[2]]
spec<-r3[[3]]
opt<-which.max(rowSums(sens,spec))
sens<-r3[[2:3]]
sens
sens<-r3[[2:3]][1]
sens=r3[c(2,3)]
sens=data.frame(r3[c(2,3)])
View(sens)
opt<-which.max(rowSums(data.frame(r3[c(2,3)])))
max(opt)
opt
temp<-data.frame(r3[c(2,3)]
temp<-data.frame(r3[c(2,3)])
View(temp)
temp<-data.frame(r3[c(2,3)])
opt<-which.max(rowSums(temp)))
opt<-which.max(rowSums(temp))
opt
?coord
?coords
coords(r3,"best")
r1=plot(roc(m0$model$incidencev414,fitted(m0)));coords(r1,"best")
r2=plot(roc(outcome[-1:-982],ous$fit));coords(r2,"best")
r3=plot(roc(outcome[1:982],f1[1:982,]$mean));coords(r3,"best")
par(mar=c(5,5,2,2),family="serif",las=1)
plot(density(f1[1:982,]$mean),axes=F,main="",
xlab="Predicted probability",ylab="Density",cex.lab=1.2)
axis(1,tick=FALSE,cex.axis=1.2)
separationplot(f1[-1:-982,]$mean,outcome[-1:-982])
r4=plot(roc(outcome[-1:-982],f1[-1:-982,]$mean))
r4=plot(roc(outcome[-1:-982],f1[-1:-982,]$mean));coords(r4,"best")
mean((outcome[-1:-982]-f1[-1:-982,]$mean)^2)
rm(m1)
gc()
m1a<-jags(data=list(incidence=incidence,d=d2,dW=dW2,yW=yW,N=N),
inits=NULL,model.file=M1,
parameters.to.save="fit",
n.chains=3,n.iter=10000,n.burnin=1000,n.thin=2)
f1a<-data.frame(jagsresults(m1a,"fit"))
separationplot(f1a[1:982,]$mean,outcome[1:982])
r5=plot(roc(outcome[1:982],f2a[1:982,]$mean));coords(r5,"best")
r5=plot(roc(outcome[1:982],f1a[1:982,]$mean));coords(r5,"best")
mean((outcome[1:982]-f1a[1:982,]$mean)^2)
separationplot(f1a[-1:-982,]$mean,outcome[-1:-982])
r6=plot(roc(outcome[-1:-982],f1a[-1:-982,]$mean));coords(r6,"best")
mean((outcome[-1:-982]-f1a[-1:-982,]$mean)^2)
gc()
library(survival)
?clogit
setwd("~/Dropbox/Glasnost/Replications/2010_Bruckner_Ciccone")
options(scipen=7)
library(foreign)
library(AER)
library(MASS)
library(mfx)
library(Zelig)
source("code/functions.R")
df<-read.dta("raw_data/data.dta")
l6<-glm(war_prio_on~ind+factor(ccode),df,family=binomial(link ="logit"))
clse(l6,1,d$ccode)
d<-df[!is.na(df$war_prio_on) & !is.na(df$ind),]
clse(l6,1,d$ccode)
l6<-glm(war_prio_on~ind+factor(ccode),df,family=binomial(link ="logit"))
clse(l6,1,d$ccode)
nobs(l6)
setwd("~/Dropbox/Glasnost/Replications/2010_Bruckner_Ciccone")
options(scipen=7)
library(foreign)
library(AER)
library(MASS)
library(mfx)
library(Zelig)
source("code/functions.R")
df<-read.dta("raw_data/data.dta")
d<-df[!is.na(df$war_prio_on) & !is.na(df$ind),]
a<-df[df$war_prio_on==1,]
table(a$country,a$year)
l1<-lm(war_prio_on~ind,df)
clse(l1,1,d$ccode)
l2<-glm(war_prio_on~ind,df,family=binomial(link = "probit"))
ml2<-probitmfx(war_prio_on~ind,df);ml2
l3<-glm(war_prio_on~ind,df,family=binomial(link ="logit"))
ml3<-logitmfx(war_prio_on~ind,df);ml3
l6<-glm(war_prio_on~ind+factor(ccode),df,family=binomial(link ="logit"))
clse(l6,1,d$ccode)
l7<-glm(war_prio_on~ind+factor(ccode)+factor(year)+factor(ccode)*year,
df,family=binomial(link ="logit"))
clse(l7,1,d$ccode)
l7<-glm(war_prio_on~ind+factor(ccode)+factor(year)+factor(ccode)*year,
df,family=binomial(link ="logit"))
clse(l7,1,d$ccode)
l7<-glogit(war_prio_on~ind+strata(ccode)+strata(year)+strata(ccode)*year,df)
l7<-clogit(war_prio_on~ind+strata(ccode)+strata(year)+strata(ccode)*year,df)
l7<-clogit(war_prio_on~ind+strata(ccode),df)
summary(l7)
clse(l7,1,d$ccode)
names(l7)
